using BepInEx.Configuration;
using Visualization;
namespace ESP;
public partial class Settings
{
#nullable disable
  public static ConfigEntry<int> configCreatureFireLineWidth;
  public static ConfigEntry<int> configTrackedCreatureRayWidth;
  public static ConfigEntry<int> configBreedingLineWidth;
  public static ConfigEntry<int> configCoverRayWidth;
  public static ConfigEntry<int> configPlayerCoverRayWidth;
  public static ConfigEntry<int> configSmokeLineWidth;
  public static ConfigEntry<int> configSenseLineWidth;
  public static ConfigEntry<int> configNoiseLineWidth;
  public static ConfigEntry<int> configSpawnZoneRayWidth;
  public static ConfigEntry<int> configRandEventSystemRayWidth;
  public static ConfigEntry<int> configSpawnerRayWidth;
  public static ConfigEntry<int> configSpawnerTriggerRangeLineWidth;
  public static ConfigEntry<int> configSpawnerLimitRangeLineWidth;
  public static ConfigEntry<int> configSpawnerSpawnRangeLineWidth;
  public static ConfigEntry<int> configAltarRayWidth;
  public static ConfigEntry<int> configAltarItemStandRangeLineWidth;
  public static ConfigEntry<int> configAltarSpawnRadiusLineWidth;
  public static ConfigEntry<int> configSpawntPointOneTimeRayWidth;
  public static ConfigEntry<int> configSpawntPointRespawningRayWidth;
  public static ConfigEntry<int> configZoneCornerRayWidth;
  public static ConfigEntry<int> configPickableOneTimeRayWidth;
  public static ConfigEntry<int> configPickableRespawningRayWidth;
  public static ConfigEntry<int> configEffectAreaLineWidth;
  public static ConfigEntry<float> configCustomContainerEffectAreaRadius;
  public static float CustomContainerEffectAreaRadius => configCustomContainerEffectAreaRadius.Value;
  public static ConfigEntry<float> configCustomCraftingEffectAreaRadius;
  public static float CustomCraftingEffectAreaRadius => configCustomCraftingEffectAreaRadius.Value;
  public static ConfigEntry<int> configChestRayWidth;
  public static ConfigEntry<int> configOreRayWidth;
  public static ConfigEntry<int> configTreeRayWidth;
  public static ConfigEntry<int> configDestructibleRayWidth;
  public static ConfigEntry<int> configTrophySpeakSphereWidth;
  public static ConfigEntry<int> configLocationRayWidth;
  public static ConfigEntry<int> configTerrainRayWidth;

  private static void OnWidthChanged(ConfigEntry<int> entry, string tag)
  {
    entry.SettingChanged += (s, e) => Draw.SetLineWidth(tag, entry.Value);
    Draw.SetLineWidth(tag, entry.Value);
  }
  public static void InitVisualWidth(ConfigFile config)
  {
    var section = "6. Width of visuals";
    configCustomContainerEffectAreaRadius = config.Bind(section, "Custom radius for containers", 0.0f, "Custom effect area sphere for containers (0 to disable)");
    configCustomCraftingEffectAreaRadius = config.Bind(section, "Custom radius for crafting stations", 0.0f, "Custom effect area sphere for crafting stations (0 to disable)");

    configCreatureFireLineWidth = config.Bind(section, "Creature fire alert range", 2, "");
    OnWidthChanged(configCreatureFireLineWidth, Tag.CreatureFireRange);
    configSenseLineWidth = config.Bind(section, "Creature senses", 2, "");
    OnWidthChanged(configSenseLineWidth, Tag.CreatureAlertRange);
    OnWidthChanged(configSenseLineWidth, Tag.CreatureHearRange);
    OnWidthChanged(configSenseLineWidth, Tag.CreatureNoise);
    configBreedingLineWidth = config.Bind(section, "Breeding limits", 2, "");
    OnWidthChanged(configBreedingLineWidth, Tag.CreatureBreedingPartnerRange);
    OnWidthChanged(configBreedingLineWidth, Tag.CreatureBreedingTotalRange);
    OnWidthChanged(configBreedingLineWidth, Tag.CreatureEatingRange);
    OnWidthChanged(configBreedingLineWidth, Tag.CreatureFoodSearchRange);
    configCoverRayWidth = config.Bind(section, "Cover rays", 2, "");
    OnWidthChanged(configCoverRayWidth, Tag.StructureCover);
    OnWidthChanged(configCoverRayWidth, Tag.StructureCoverBlocked);
    configPlayerCoverRayWidth = config.Bind(section, "Player cover rays", 2, "");
    OnWidthChanged(configPlayerCoverRayWidth, Tag.PlayerCover);
    OnWidthChanged(configPlayerCoverRayWidth, Tag.PlayerCoverBlocked);
    configSmokeLineWidth = config.Bind(section, "Smoke", 2, "");
    OnWidthChanged(configSmokeLineWidth, Tag.Smoke);
    configTrackedCreatureRayWidth = config.Bind(section, "Tracted creature rays", 10, "");
    OnWidthChanged(configTrackedCreatureRayWidth, Tag.TrackedCreature);
    configSpawntPointOneTimeRayWidth = config.Bind(section, "Spawn points (one time)", 2, "");
    OnWidthChanged(configSpawntPointOneTimeRayWidth, Tag.SpawnPointOneTime);
    configSpawntPointRespawningRayWidth = config.Bind(section, "Spawn points (respawning)", 2, "");
    OnWidthChanged(configSpawntPointRespawningRayWidth, Tag.SpawnPointRespawning);
    configSpawnerRayWidth = config.Bind(section, "Creature spawner rays", 2, "");
    OnWidthChanged(configSpawnerRayWidth, Tag.SpawnerRay);
    configSpawnerTriggerRangeLineWidth = config.Bind(section, "Creature spawner trigger range", 2, "");
    OnWidthChanged(configSpawnerTriggerRangeLineWidth, Tag.SpawnerTriggerRange);
    configSpawnerLimitRangeLineWidth = config.Bind(section, "Creature spawner limit range", 2, "");
    OnWidthChanged(configSpawnerLimitRangeLineWidth, Tag.SpawnerLimitRange);
    configSpawnerSpawnRangeLineWidth = config.Bind(section, "Creature spawner spawn range", 2, "");
    OnWidthChanged(configSpawnerSpawnRangeLineWidth, Tag.SpawnerSpawnRange);
    configAltarRayWidth = config.Bind(section, "Boss altar rays", 2, "");
    OnWidthChanged(configAltarRayWidth, Tag.AltarRay);
    configAltarItemStandRangeLineWidth = config.Bind(section, "Boss altar item stand range", 2, "");
    OnWidthChanged(configAltarItemStandRangeLineWidth, Tag.AltarItemStandRange);
    configAltarSpawnRadiusLineWidth = config.Bind(section, "Boss altar spawn radius", 2, "");
    OnWidthChanged(configAltarSpawnRadiusLineWidth, Tag.AltarSpawnRadius);
    configSpawnZoneRayWidth = config.Bind(section, "Spawn zones", 10, "");
    OnWidthChanged(configSpawnZoneRayWidth, Tag.SpawnZoneAshlands);
    OnWidthChanged(configSpawnZoneRayWidth, Tag.SpawnZoneBlackForest);
    OnWidthChanged(configSpawnZoneRayWidth, Tag.SpawnZoneDeepNorth);
    OnWidthChanged(configSpawnZoneRayWidth, Tag.SpawnZoneMeadows);
    OnWidthChanged(configSpawnZoneRayWidth, Tag.SpawnZoneMistlands);
    OnWidthChanged(configSpawnZoneRayWidth, Tag.SpawnZoneMountain);
    OnWidthChanged(configSpawnZoneRayWidth, Tag.SpawnZoneOcean);
    OnWidthChanged(configSpawnZoneRayWidth, Tag.SpawnZonePlains);
    OnWidthChanged(configSpawnZoneRayWidth, Tag.SpawnZoneSwamp);
    OnWidthChanged(configSpawnZoneRayWidth, Tag.SpawnZoneUnknown);
    configZoneCornerRayWidth = config.Bind(section, "Zone corner rays", 10, "");
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerAshlands);
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerBlackForest);
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerDeepNorth);
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerMeadows);
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerMistlands);
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerMountain);
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerOcean);
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerPlains);
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerSwamp);
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerSwamp);
    OnWidthChanged(configZoneCornerRayWidth, Tag.ZoneCornerUnknown);
    configRandEventSystemRayWidth = config.Bind(section, "Random event system", 10, "");
    OnWidthChanged(configRandEventSystemRayWidth, Tag.RandomEventSystem);
    configPickableOneTimeRayWidth = config.Bind(section, "Pickable rays (one time)", 2, "");
    OnWidthChanged(configPickableOneTimeRayWidth, Tag.PickableOneTime);
    configPickableRespawningRayWidth = config.Bind(section, "Pickable rays (respawning)", 2, "");
    OnWidthChanged(configPickableRespawningRayWidth, Tag.PickableRespawning);
    configChestRayWidth = config.Bind(section, "Chest rays", 2, "");
    OnWidthChanged(configChestRayWidth, Tag.Chest);
    configOreRayWidth = config.Bind(section, "Ore rays", 2, "");
    OnWidthChanged(configOreRayWidth, Tag.Ore);
    configTreeRayWidth = config.Bind(section, "Tree rays", 2, "");
    OnWidthChanged(configTreeRayWidth, Tag.Tree);
    configTrophySpeakSphereWidth = config.Bind(section, "Trophy speak spheres", 10, "");
    OnWidthChanged(configTrophySpeakSphereWidth, Tag.TrophySpeak);
    configDestructibleRayWidth = config.Bind(section, "Destructible rays", 2, "");
    OnWidthChanged(configDestructibleRayWidth, Tag.Destructible);
    configLocationRayWidth = config.Bind(section, "Location rays", 10, "");
    OnWidthChanged(configLocationRayWidth, Tag.Location);
    configEffectAreaLineWidth = config.Bind(section, "Area effects", 2, "");
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaBurning);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaComfort);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaCustomContainer);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaCustomCrafting);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaFire);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaHeat);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaNoMonsters);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaOther);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaPlayerBase);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaPrivateArea);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaTeleport);
    OnWidthChanged(configEffectAreaLineWidth, Tag.EffectAreaWarmCozy);
    configNoiseLineWidth = config.Bind(section, "Noise", 2, "");
    OnWidthChanged(configNoiseLineWidth, Tag.CreatureNoise);
    configTerrainRayWidth = config.Bind(section, "Terrain rays", 2, "");
    OnWidthChanged(configTerrainRayWidth, Tag.Terrain);
  }
}
