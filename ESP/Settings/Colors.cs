using BepInEx.Configuration;
using UnityEngine;
using HarmonyLib;

namespace ESP
{
  public partial class Settings
  {
    private static Color ParseColor(string color)
    {
      if (ColorUtility.TryParseHtmlString(color, out var parsed)) return parsed;
      return Color.white;
    }
    public static ConfigEntry<string> configCreatureRayColor;
    public static Color creatureRayColor => ParseColor(configCreatureRayColor.Value);
    public static ConfigEntry<string> configPickableOneTimeColor;
    public static Color pickableOneTimeColor => ParseColor(configPickableOneTimeColor.Value);
    public static ConfigEntry<string> configPickableRespawningColor;
    public static Color pickableRespawningColor => ParseColor(configPickableRespawningColor.Value);
    public static ConfigEntry<string> configLocationRayColor;
    public static Color locationRayColor => ParseColor(configLocationRayColor.Value);
    public static ConfigEntry<string> configContainerRayColor;
    public static Color containerRayColor => ParseColor(configContainerRayColor.Value);
    public static ConfigEntry<string> configOreRayColor;
    public static Color oreRayColor => ParseColor(configOreRayColor.Value);
    public static ConfigEntry<string> configTreeRayColor;
    public static Color treeRayColor => ParseColor(configTreeRayColor.Value);
    public static ConfigEntry<string> configDestructibleRayColor;
    public static Color destructibleRayColor => ParseColor(configDestructibleRayColor.Value);
    public static ConfigEntry<string> configSpawnerOneTimeColor;
    public static Color spawnerOneTimeColor => ParseColor(configSpawnerOneTimeColor.Value);
    public static ConfigEntry<string> configSpawnerRespawningColor;
    public static Color spawnerRespawningColor => ParseColor(configSpawnerRespawningColor.Value);
    public static ConfigEntry<string> configNoiseColor;
    public static Color noiseColor => ParseColor(configNoiseColor.Value);
    public static ConfigEntry<string> configCoverRayColor;
    public static Color coverRayColor => ParseColor(configCoverRayColor.Value);
    public static ConfigEntry<string> configCoverRayBlockedColor;
    public static Color coverRayBlockedColor => ParseColor(configCoverRayBlockedColor.Value);
    public static ConfigEntry<string> configCreatureHearColor;
    public static Color creatureHearColor => ParseColor(configCreatureHearColor.Value);
    public static ConfigEntry<string> configCreatureViewColor;
    public static Color creatureViewColor => ParseColor(configCreatureViewColor.Value);
    public static ConfigEntry<string> configCreatureAlertViewColor;
    public static Color creatureAlertViewColor => ParseColor(configCreatureAlertViewColor.Value);
    public static ConfigEntry<string> configCreatureFireLimitColor;
    public static Color creatureFireLimitColor => ParseColor(configCreatureFireLimitColor.Value);
    public static ConfigEntry<string> configCreatureTotalLimitColor;
    public static Color creatureTotalLimitColor => ParseColor(configCreatureTotalLimitColor.Value);
    public static ConfigEntry<string> configCreaturePartnerCheckColor;
    public static Color creaturePartnerCheckColor => ParseColor(configCreaturePartnerCheckColor.Value);
    public static ConfigEntry<string> configCreatureFoodCheckColor;
    public static Color creatureFoodCheckColor => ParseColor(configCreatureFoodCheckColor.Value);
    public static ConfigEntry<string> configCreatureEatRangeColor;
    public static Color creatureEatRangeColor => ParseColor(configCreatureEatRangeColor.Value);
    public static ConfigEntry<string> configRulerColor;
    public static Color rulerColor => ParseColor(configRulerColor.Value);
    public static ConfigEntry<string> configSpawnAreaTriggerColor;
    public static Color spawnAreaTriggerColor => ParseColor(configSpawnAreaTriggerColor.Value);
    public static ConfigEntry<string> configSpawnAreaNearColor;
    public static Color spawnAreaNearColor => ParseColor(configSpawnAreaNearColor.Value);
    public static ConfigEntry<string> configSpawnAreaSpawnColor;
    public static Color spawnAreaSpawnColor => ParseColor(configSpawnAreaSpawnColor.Value);
    public static ConfigEntry<string> configMineRockSupportColor;
    public static Color mineRockSupportColor => ParseColor(configMineRockSupportColor.Value);
    public static ConfigEntry<string> configEffectAreaPrivateAreaColor;
    public static Color effectAreaPrivateAreaColor => ParseColor(configEffectAreaPrivateAreaColor.Value);
    public static ConfigEntry<string> configEffectAreaComfortColor;
    public static Color effectAreaComfortColor => ParseColor(configEffectAreaComfortColor.Value);
    public static ConfigEntry<string> configEffectAreaBurningColor;
    public static Color effectAreaBurningColor => ParseColor(configEffectAreaBurningColor.Value);
    public static ConfigEntry<string> configEffectAreaHeatColor;
    public static Color effectAreaHeatColor => ParseColor(configEffectAreaHeatColor.Value);
    public static ConfigEntry<string> configEffectAreaFireColor;
    public static Color effectAreaFireColor => ParseColor(configEffectAreaFireColor.Value);
    public static ConfigEntry<string> configEffectAreaNoMonstersColor;
    public static Color effectAreaNoMonstersColor => ParseColor(configEffectAreaNoMonstersColor.Value);
    public static ConfigEntry<string> configEffectAreaTeleportColor;
    public static Color effectAreaTeleportColor => ParseColor(configEffectAreaTeleportColor.Value);
    public static ConfigEntry<string> configEffectAreaPlayerBaseColor;
    public static Color effectAreaPlayerBaseColor => ParseColor(configEffectAreaPlayerBaseColor.Value);
    public static ConfigEntry<string> configEffectAreaOtherColor;
    public static Color effectAreaOtherColor => ParseColor(configEffectAreaOtherColor.Value);
    public static ConfigEntry<string> configEffectAreaCustomContainerColor;
    public static Color effectAreaCustomContainerColor => ParseColor(configEffectAreaCustomContainerColor.Value);
    public static ConfigEntry<string> configEffectAreaCustomCraftingColor;
    public static Color effectAreaCustomCraftingColor => ParseColor(configEffectAreaCustomCraftingColor.Value);
    public static ConfigEntry<string> configSmokeColor;
    public static Color smokeColor => ParseColor(configSmokeColor.Value);
    public static ConfigEntry<string> configRandomEventSystemRayColor;
    public static Color randomEventSystemRayColor => ParseColor(configRandomEventSystemRayColor.Value);
    public static ConfigEntry<string> configBiomeAshlandsColor;
    public static Color biomeAshlandsColor => ParseColor(configBiomeAshlandsColor.Value);
    public static ConfigEntry<string> configBiomeBlackForestColor;
    public static Color biomeBlackForestColor => ParseColor(configBiomeBlackForestColor.Value);
    public static ConfigEntry<string> configBiomeDeepNorthColor;
    public static Color biomeDeepNorthColor => ParseColor(configBiomeDeepNorthColor.Value);
    public static ConfigEntry<string> configBiomeMeadowsColor;
    public static Color biomeMeadowsColor => ParseColor(configBiomeMeadowsColor.Value);
    public static ConfigEntry<string> configBiomeMistlandsColor;
    public static Color biomeMistlandsColor => ParseColor(configBiomeMistlandsColor.Value);
    public static ConfigEntry<string> configBiomeMountainColor;
    public static Color biomeMountainColor => ParseColor(configBiomeMountainColor.Value);
    public static ConfigEntry<string> configBiomeOceanColor;
    public static Color biomeOceanColor => ParseColor(configBiomeOceanColor.Value);
    public static ConfigEntry<string> configBiomePlainsColor;
    public static Color biomePlainsColor => ParseColor(configBiomePlainsColor.Value);
    public static ConfigEntry<string> configBiomeSwampColor;
    public static Color biomeSwampColor => ParseColor(configBiomeSwampColor.Value);
    public static ConfigEntry<string> configBiomeOtherColor;
    public static Color biomeOtherColor => ParseColor(configBiomeOtherColor.Value);

    private static void InitColors(ConfigFile config)
    {
      var section = "6. Colors (predefined, #RRGGBB, #RRGGBBAA)";
      Settings.configCreatureRayColor = config.Bind(section, "Creature ray", "magenta", "");
      Settings.configPickableOneTimeColor = config.Bind(section, "Pickable ray (one time)", "green", "");
      Settings.configPickableRespawningColor = config.Bind(section, "Pickable ray (respawning)", "blue", "");
      Settings.configLocationRayColor = config.Bind(section, "Location ray", "black", "");
      Settings.configContainerRayColor = config.Bind(section, "Container ray", "white", "");
      Settings.configOreRayColor = config.Bind(section, "Ore ray", "gray", "");
      Settings.configTreeRayColor = config.Bind(section, "Tree ray", "white", "");
      Settings.configDestructibleRayColor = config.Bind(section, "Destructible ray", "white", "");
      Settings.configSpawnerOneTimeColor = config.Bind(section, "Spawn point ray (one time)", "red", "");
      Settings.configSpawnerRespawningColor = config.Bind(section, "Spawn point ray (respawning)", "yellow", "");
      Settings.configNoiseColor = config.Bind(section, "Noise sphere", "cyan", "");
      Settings.configCoverRayColor = config.Bind(section, "Cover ray", "green", "");
      Settings.configCoverRayBlockedColor = config.Bind(section, "Cover ray (blocked)", "red", "");
      Settings.configCreatureHearColor = config.Bind(section, "Creature hearing sphere", "green", "");
      Settings.configCreatureViewColor = config.Bind(section, "Creature sight cone", "white", "");
      Settings.configCreatureAlertViewColor = config.Bind(section, "Creature alert sight cone", "red", "");
      Settings.configCreatureFireLimitColor = config.Bind(section, "Creature fire limit sphere", "magenta", "");
      Settings.configCreatureTotalLimitColor = config.Bind(section, "Creature total limit sphere", "cyan", "");
      Settings.configCreaturePartnerCheckColor = config.Bind(section, "Creature partner check sphere", "magenta", "");
      Settings.configCreatureFoodCheckColor = config.Bind(section, "Creature food check sphere", "gray", "");
      Settings.configCreatureEatRangeColor = config.Bind(section, "Creature eat range sphere", "black", "");
      Settings.configRulerColor = config.Bind(section, "Ruler", "red", "");
      Settings.configSpawnAreaTriggerColor = config.Bind(section, "Spawner trigger sphere", "red", "");
      Settings.configSpawnAreaNearColor = config.Bind(section, "Spawner near limit sphere", "white", "");
      Settings.configSpawnAreaSpawnColor = config.Bind(section, "Spawner spawn sphere", "cyan", "");
      Settings.configMineRockSupportColor = config.Bind(section, "Minerock support bounding box", "red", "");
      Settings.configEffectAreaPrivateAreaColor = config.Bind(section, "Ward effect sphere", "gray", "");
      Settings.configEffectAreaComfortColor = config.Bind(section, "Comfort effect sphere", "cyan", "");
      Settings.configEffectAreaBurningColor = config.Bind(section, "Burning effect sphere", "yellow", "");
      Settings.configEffectAreaHeatColor = config.Bind(section, "Heat effect sphere", "magenta", "");
      Settings.configEffectAreaFireColor = config.Bind(section, "Fire effect sphere", "red", "");
      Settings.configEffectAreaNoMonstersColor = config.Bind(section, "No monsters effect sphere", "green", "");
      Settings.configEffectAreaTeleportColor = config.Bind(section, "Teleport effect sphere", "blue", "");
      Settings.configEffectAreaPlayerBaseColor = config.Bind(section, "Player base effect sphere", "white", "");
      Settings.configEffectAreaOtherColor = config.Bind(section, "Unknown effect spheres", "Black", "");
      Settings.configEffectAreaCustomContainerColor = config.Bind(section, "Custom container sphere", "yellow", "");
      Settings.configEffectAreaCustomCraftingColor = config.Bind(section, "Custom crafting station sphere", "yellow", "");
      Settings.configSmokeColor = config.Bind(section, "Smoke sphere", "black", "");
      Settings.configRandomEventSystemRayColor = config.Bind(section, "Random even system ray", "black", "");
      Settings.configBiomeAshlandsColor = config.Bind(section, "Ashlands color", "red", "");
      Settings.configBiomeBlackForestColor = config.Bind(section, "Black Forest color", "magenta", "");
      Settings.configBiomeDeepNorthColor = config.Bind(section, "Deep North color", "gray", "");
      Settings.configBiomeMeadowsColor = config.Bind(section, "Meadows color", "green", "");
      Settings.configBiomeMistlandsColor = config.Bind(section, "Mistlands color", "gray", "");
      Settings.configBiomeMountainColor = config.Bind(section, "Mountain color", "white", "");
      Settings.configBiomeOceanColor = config.Bind(section, "Ocean color", "blue", "");
      Settings.configBiomePlainsColor = config.Bind(section, "Plains color", "yellow", "");
      Settings.configBiomeSwampColor = config.Bind(section, "Swamp color", "cyan", "");
      Settings.configBiomeOtherColor = config.Bind(section, "Unknown biome color", "black", "");
    }
  }
}
